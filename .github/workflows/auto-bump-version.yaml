name: Auto Bump Version on Merge to main

on:
  pull_request:
    types: [closed]

permissions:
  contents: write

jobs:
  bump-version:
    if: >
      github.event.pull_request.merged == true &&
      github.event.pull_request.base.ref == 'main' &&
      github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Detect if package.json version changed in PR
        id: ver_changed
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request.number;
            const files = await github.paginate(github.rest.pulls.listFiles, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr,
              per_page: 100
            });
            const touched = files.some(f => f.filename === 'package.json' && /"version"\s*:/.test(f.patch || ''));
            core.setOutput('changed', touched ? 'true' : 'false');

      - name: Bump patch version (+0.0.1) if not changed in PR
        if: steps.ver_changed.outputs.changed != 'true'
        run: |
          node -e "
            const fs = require('fs');
            const pr_title = context.payload.pull_request.title;
            const pkg = JSON.parse(fs.readFileSync('package.json','utf8'));
            const [a,b,c] = pkg.version.split('.').map(Number);
            let new_version;

            if (pr_title.toLowerCase().startsWith('feat')) {
                new_version = [a,b+1,0].join('.');
             } else {
              new_version = [a,b,c+1].join('.');
            }

            pkg.version = new_version;
            fs.writeFileSync('package.json', JSON.stringify(pkg,null,2)+'\n');
            console.log('Bumped to', pkg.version);
          "

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Sync UI exports to dist/shared/index.d.ts
        run: |
          node -e "
            const fs = require('fs');
            const path = require('path');
            const posix = path.posix;
            const root = 'dist/shared';
            const indexPath = posix.join(root, 'index.d.ts');
            const uiRoot = posix.join(root, 'ui');
            if (!fs.existsSync(uiRoot)) { console.log('No dist/shared/ui found. Skip.'); process.exit(0); }
            const indexContent = fs.existsSync(indexPath) ? fs.readFileSync(indexPath,'utf8') : '';
            const findIndexFiles = (dir) => {
              return fs.readdirSync(dir, { withFileTypes: true }).flatMap(d => {
                const p = posix.join(dir, d.name);
                if (d.isDirectory()) return findIndexFiles(p);
                return d.name === 'index.d.ts' ? [p] : [];
              });
            };
            const uiFiles = findIndexFiles(uiRoot);
            const adds = [];
            for (const f of uiFiles) {
              const content = fs.readFileSync(f, 'utf8');
              for (const m of content.matchAll(/export\s+\{([^}]+)\}\s+from\s+'\.\/([^']+)'/g)) {
                const names = m[1].trim();
                const fromRel = m[2].trim();
                const base = f.replace(/\/index\.d\.ts$/, '');
                const line = \`export { \${names} } from '\${base.replace(root,'').replace(/^\//,'').length ? './' + base.slice(root.length+1) : '.'}/\${fromRel}';\`;
                if (!indexContent.includes(names)) adds.push(line);
              }
            }
            if (adds.length) {
              const next = (indexContent.trim() ? indexContent.trim()+'\n' : '') + adds.join('\n') + '\n';
              fs.writeFileSync(indexPath, next);
              console.log('Added exports:', adds);
            } else {
              console.log('No new exports found.');
            }
          "

      - name: Commit & Push
        run: |
          if git diff --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json dist/shared/index.d.ts || true
          git commit -m "chore: bump version and sync UI exports [skip ci]"
          git push

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
